<!DOCTYPE html>
<html>
<head>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
<script src="//code.jquery.com/jquery-2.1.1.min.js"></script>
<script src='https://api.tiles.mapbox.com/mapbox.js/v2.1.5/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.5/mapbox.css' rel='stylesheet' />
</head>

<style>
  body { margin: 200px; padding: 200px; position: relative}
  #map { position: absolute; 
         left: 25%; 
         display: inline-block;
         margin: 0 auto;
         top: 25px;
         bottom:25px; 
         width: 50%;
         height: 100%;
         border-radius: 100%;
         background-color: black;
         background-image: 
         radial-gradient(center, rgba(255,255,255,1) 100%, rgba(255,255,255,1) 50%, rgba(255,255,255,0) 50%),
        linear-gradient(top, rgba(0,0,0,1) 100%, rgba(113,113,114,1) 100%);
        background-size: 128px 128px, 100%, 100%;
    background-position: center -54px, left top;
    background-repeat: no-repeat, repeat;
    z-index: 1;

       }
/*
* These CSS rules affect the tooltips within maps with the custom-popup
* class. See the full CSS for all customizable options:
* https://github.com/mapbox/mapbox.js/blob/001754177f3985c0e6b4a26e3c869b0c66162c99/theme/style.css#L3...
*/
.leaflet-control-mapbox-geocoder-form {
  background: #f7dcf7;
  margin-bottom: 0px;
  color: black;

}

.leaflet-control-container {
  position: absolute;
  left: 37.5%;
  bottom: 150px;
  color: black;
}
 
.leaflet-control-attribution {
  display: none;
} 

.custom-popup .leaflet-popup-content-wrapper {
  background:#2c3e50 Â ;
  color: white;
  font-size:16px;
  line-height:24px;
border-radius: 20px;
  }
.custom-popup .leaflet-popup-content-wrapper a {
  color:rgba(255,255,255,0.5);
  border-color: red;
border: aliceblue;
border-width: thick;
color: black;
background-color: black;
border-radius: 200px;
  }
.custom-popup .leaflet-popup-tip-container {
  width:30px;
  height:15px;
  border-color: red;
border: aliceblue;
border-width: thick;
color: black;
background-color: black;
border-radius: 200px;
  }
  .user {
    position: absolute;
    right: 10px;
    top: 50px;
    height: 100%;
    width: 30px;
  }
.text {
  color: black;
}

.custom-popup .leaflet-popup-tip {
  border-left:15px solid transparent;
  border-right:15px solid transparent;
  border-top:15px solid #2c3e50 ;
  border-radius: 15px;
  border-color: red;
border: aliceblue;
border-width: thick;
color: black;
background-color: black;
border-radius: 200px;
  }
</style>
<body>

  <div id="geoJson" style="display:none;"></div>

  <div class = 'user'>
    <%= @users %>
    <% @users.each do |user| %>
    <p>
      <strong><%= user.email %></strong>
        <%= button_to "Add Friend", friendships_path(:friend_id => user), :method => "post" %>
        </p>
    <% end %>
</div>

<div class='custom-popup' id='map'></div>

<script type="text/javascript">
// $(document).on("ready page:load", function() {
//  $.get("/generator/index.json", function (data) {
//    console.log(data);
//    alert('found something');
//  });
// });

$(document).ready(function() {
  $.get("/generator/index.json", function (data) {
    // console.log(data.json);
    generator = data.json;
  });
});



L.mapbox.accessToken = 'pk.eyJ1IjoibWFya21hcmttYXJrIiwiYSI6IjBVV1oxYUkifQ.eq_QpInsA8ggRqbXrJRtAw';
  

  var map = L.mapbox.map('map', 'jkdale89.l2l2p32i')
  // var myLayer = L.mapbox.featureLayer().addTo(map);

    // $.ajax({ 
    //   dataType: 'text',
    //   url: '/generator/index.json',
    //   success: function(data) {
    //     var geojson;
    //     geojson = $.parseJSON(data)   
    //       return myLayer.setGeoJSON(geojson);
    //     }
    //   });

// adds a search control that can recenter the map on various cities
    .addControl(L.mapbox.geocoderControl('mapbox.places', {
        autocomplete: true,
        keepOpen: true
    }));
        
    map.featureLayer.on("ready", function (){
      var myLayer = L.mapbox.featureLayer().addTo(map);
      

// CREATES A RADIUS HOVER MARKER
//     var RADIUS = 500;
//     var filterCircle = L.circle(L.latLng(37.7, -122), RADIUS, {
//     opacity: 1,
//     weight: 1,
//     fillOpacity: 0.4
//     }).addTo(map);

//  HIDES AND SHOWS LAYERS WITHIN THE RADIUS
//     map.on('mousemove', function(e) {
//     filterCircle.setLatLng(e.latlng);
//     csvLayer.setFilter(function showAirport(feature) {
//         return e.latlng.distanceTo(L.latLng(
//                 feature.geometry.coordinates[1],
//                 feature.geometry.coordinates[0])) < RADIUS;
//     });
// });
})
</script>

</body>
</html>
<!-- //   var marker = L.marker(new L.LatLng(37.7749300 , -122.374200), {
    //   icon: L.mapbox.marker.icon({
    //   'marker-color': 'FFFF00',
    //   'marker-symbol': 'basketball',
    //   'description': 'Court'
    //     }),
    //   draggable: true
    // });

    //   var Bmarker = L.marker(new L.LatLng(37.7549300 , -122.374200), {
    //   icon: L.mapbox.marker.icon({
    //   'marker-color': 'FFFF00',
    //   'marker-symbol': 'america-football',
    //   'description': 'Gridiron'
    //     }),
    //   draggable: true
    // });

    //   var Cmarker = L.marker(new L.LatLng(37.7649300 , -122.374200), {
    //   icon: L.mapbox.marker.icon({
    //   'marker-color': 'FFFF00',
    //   'marker-symbol': 'soccer',
    //   'description': 'Pitch'
    //     }),
    //   draggable: true
    // });
      //debugger;
      // marker.bindPopup('Drag this marker to add a new Basketball Court!');
      // marker.addTo(map);

      // Bmarker.bindPopup('Drag this marker to add a new Football Field!');
      // Bmarker.addTo(map);

      // Cmarker.bindPopup('Drag this marker to add a new Soccer Field!');
      // Cmarker.addTo(map); -->


      <!-- //declares elements based on MapBox attributes - allows for sorting by sport!
    // var all = document.getElementById('filter-all');
    //     hoops = document.getElementById('hoops');
    //     football = document.getElementById('football')
    //     soccer = document.getElementById('soccer')
    //   items = [];
    //   last = null;
    //   index = 0;
    //   hoops.onclick = function(e) {
    //     all.className = '';
    //     soccer.className = '';
    //     football.className = '';
    //     this.className = 'active';
    //     // The setFilter function takes a GeoJSON feature object
    //     // and returns true to show it or false to hide it.
    //     map.featureLayer.setFilter(function(f) {
    //         return f.properties['description'] === 'Court';
    //     });
    //     return false;
    // };
    //   football.onclick = function(e) {
    //         all.className = '';
    //         hoops.className = '';
    //         soccer.className = '';
    //         this.className = 'active';
    //         // The setFilter function takes a GeoJSON feature object
    //         // and returns true to show it or false to hide it.
    //         map.featureLayer.setFilter(function(f) {
    //             return f.properties['description'] === 'Gridiron';
    //         });
    //         return false;
    //     };
    //   soccer.onclick = function(e) {
    //         all.className = '';
    //         hoops.className = '';
    //         football.className ='';
    //         this.className = 'active';
    //         // The setFilter function takes a GeoJSON feature object
    //         // and returns true to show it or false to hide it.
    //         map.featureLayer.setFilter(function(f) {
    //             return f.properties['description'] === 'Pitch';
    //         });
    //         return false;
    //     };


    // all.onclick = function() {
    //     hoops.className = '';
    //     soccer.className = '';
    //     football.className = '';
    //     this.className = 'active';
    //     map.featureLayer.setFilter(function(f) {
    //         // Returning true for all markers shows everything.
    //         return true;
    //     });
    // }; -->

    <!-- // Confirms you would like to play at the court and redirects the user to the matchups page
      // layer.on("click", function (){
      //   var selectedCourt = this.feature.properties.title
      //   var sport = this.feature.properties.description
      //   console.log(this.feature.properties.title)
      //   console.log(this.feature.properties.description)
      //   map.setView(this.getLatLng())
      //   var matchup = confirm('Would you like to play at ' + selectedCourt + '?')
      //   if (matchup) {
      //     document.location.href = "/matchup/"+selectedCourt+"/"+sport
      // }
    // })
    //   items.push(layer);
    //   console.log(items) -->
<!-- 
     // //
    // var loop = function() {
    //   console.log(loop)
    //   if(index < items.length) {
    //     if (last) {
    //       last.closePopup();
    //     }
    //     map.setView(items[index].getLatLng(),12);
    //     items[index].openPopup();
    //     last = items[index];
    //     index += 1;
    //   } else {
    //     index = 0;
    //   }
    //   setTimeout(loop, 2000)
    // } -->